# Generated by Django 4.0.5 on 2022-06-07 09:55

import colorfield.fields
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import shop.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AuthShop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shop_name', models.CharField(max_length=150, verbose_name='Shop name')),
                ('avatar', models.ImageField(default=None, upload_to=shop.models.get_shop_avatar_path, verbose_name='Avatar')),
                ('avatar_thumbnail', models.ImageField(blank=True, default=None, null=True, upload_to=shop.models.get_shop_avatar_path, verbose_name='Avatar thumbnail')),
                ('color_code', colorfield.fields.ColorField(default='#FFFFFF', image_field=None, max_length=18, samples=None, verbose_name='Color code')),
                ('bg_color_code', colorfield.fields.ColorField(default='#FFFFFF', image_field=None, max_length=18, samples=None, verbose_name='Color code')),
                ('font_name', models.CharField(choices=[('L', 'Light'), ('R', 'Regular'), ('S', 'Semi-bold'), ('B', 'Black')], default='L', max_length=1, verbose_name='Font name')),
                ('bio', models.TextField(blank=True, null=True, verbose_name='Bio')),
                ('morning_hour_from', models.TimeField(blank=True, default=None, null=True, verbose_name='Morning hour from')),
                ('morning_hour_to', models.TimeField(blank=True, default=None, null=True, verbose_name='Morning hour to')),
                ('afternoon_hour_from', models.TimeField(blank=True, default=None, null=True, verbose_name='Afternoon hour from')),
                ('afternoon_hour_to', models.TimeField(blank=True, default=None, null=True, verbose_name='Afternoon hour to')),
                ('phone', models.CharField(blank=True, default=None, max_length=15, null=True, verbose_name='Phone number')),
                ('contact_email', models.EmailField(blank=True, default=None, max_length=254, null=True, verbose_name='Contact Email')),
                ('website_link', models.URLField(blank=True, default=None, null=True, verbose_name='Website')),
                ('facebook_link', models.URLField(blank=True, default=None, null=True, verbose_name='Facebook')),
                ('twitter_link', models.URLField(blank=True, default=None, null=True, verbose_name='Twitter')),
                ('instagram_link', models.URLField(blank=True, default=None, null=True, verbose_name='Instagram')),
                ('whatsapp', models.CharField(blank=True, default=None, max_length=15, null=True, verbose_name='Whatsapp number')),
                ('zone_by', models.CharField(choices=[('A', 'Address'), ('S', 'Sector')], default='A', max_length=1, verbose_name='Zone by')),
                ('longitude', models.FloatField(blank=True, default=None, max_length=10, null=True, validators=[django.core.validators.RegexValidator('^(\\+|-)?(?:180(?:(?:\\.0{1,6})?)|(?:[0-9]|[1-9][0-9]|1[0-7][0-9])(?:(?:\\.[0-9]{1,6})?))$', 'Only Geo numbers are allowed.')], verbose_name='Longitude')),
                ('latitude', models.FloatField(blank=True, default=None, max_length=10, null=True, validators=[django.core.validators.RegexValidator('^(\\+|-)?(?:90(?:(?:\\.0{1,6})?)|(?:[0-9]|[1-8][0-9])(?:(?:\\.[0-9]{1,6})?))$', 'Only Geo numbers are allowed.')], verbose_name='Latitude')),
                ('address_name', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='Address name')),
                ('km_radius', models.FloatField(blank=True, default=None, null=True, verbose_name='Km radius')),
                ('qaryb_link', models.SlugField(blank=True, default=None, max_length=200, null=True, unique=True, verbose_name='Qaryb link')),
                ('qr_code_img', models.ImageField(blank=True, default=None, null=True, upload_to=shop.models.get_shop_qr_code_path, verbose_name='QR code image')),
                ('creator', models.BooleanField(default=False, verbose_name='Creator ?')),
                ('mode_vacance_task_id', models.CharField(blank=True, default=None, max_length=40, null=True, verbose_name='Mode Vacance Task ID')),
                ('created_date', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Created date')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='Updated date')),
            ],
            options={
                'verbose_name': 'Auth Shop',
                'verbose_name_plural': 'Auth Shops',
                'ordering': ('-created_date',),
            },
        ),
        migrations.CreateModel(
            name='AuthShopDays',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code_day', models.CharField(blank=True, default=None, max_length=2, null=True, unique=True)),
                ('name_day', models.CharField(max_length=255, unique=True, verbose_name='Day name')),
            ],
            options={
                'verbose_name': 'Day',
                'verbose_name_plural': 'Days',
            },
        ),
        migrations.CreateModel(
            name='PhoneCodes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_code', models.CharField(max_length=255, unique=True, verbose_name='Phone code')),
            ],
            options={
                'verbose_name': 'Phone code',
                'verbose_name_plural': 'Phone codes',
            },
        ),
        migrations.CreateModel(
            name='TempShop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shop_name', models.CharField(max_length=150, verbose_name='Shop name')),
                ('avatar', models.ImageField(default=None, upload_to=shop.models.get_shop_avatar_path, verbose_name='Avatar')),
                ('avatar_thumbnail', models.ImageField(blank=True, default=None, null=True, upload_to=shop.models.get_shop_avatar_path, verbose_name='Avatar')),
                ('color_code', colorfield.fields.ColorField(default='#FFFFFF', image_field=None, max_length=18, samples=None, verbose_name='Color code')),
                ('bg_color_code', colorfield.fields.ColorField(default='#FFFFFF', image_field=None, max_length=18, samples=None, verbose_name='Color code')),
                ('font_name', models.CharField(choices=[('L', 'Light'), ('R', 'Regular'), ('S', 'Semi-bold'), ('B', 'Black')], default='L', max_length=2, verbose_name='Font name')),
                ('bio', models.TextField(blank=True, null=True, verbose_name='Bio')),
                ('morning_hour_from', models.TimeField(blank=True, default=None, null=True, verbose_name='Morning hour from')),
                ('morning_hour_to', models.TimeField(blank=True, default=None, null=True, verbose_name='Morning hour to')),
                ('afternoon_hour_from', models.TimeField(blank=True, default=None, null=True, verbose_name='Afternoon hour from')),
                ('afternoon_hour_to', models.TimeField(blank=True, default=None, null=True, verbose_name='Afternoon hour to')),
                ('phone', models.CharField(blank=True, default=None, max_length=15, null=True, verbose_name='Phone number')),
                ('contact_email', models.EmailField(blank=True, default=None, max_length=254, null=True, verbose_name='Contact Email')),
                ('website_link', models.URLField(blank=True, default=None, null=True, verbose_name='Website')),
                ('facebook_link', models.URLField(blank=True, default=None, null=True, verbose_name='Facebook')),
                ('twitter_link', models.URLField(blank=True, default=None, null=True, verbose_name='Twitter')),
                ('instagram_link', models.URLField(blank=True, default=None, null=True, verbose_name='Instagram')),
                ('whatsapp', models.CharField(blank=True, default=None, max_length=15, null=True, verbose_name='Whatsapp number')),
                ('zone_by', models.CharField(choices=[('A', 'Address'), ('S', 'Sector')], default='A', max_length=1, verbose_name='Zone by')),
                ('longitude', models.FloatField(blank=True, default=None, max_length=10, null=True, validators=[django.core.validators.RegexValidator('^(\\+|-)?(?:180(?:(?:\\.0{1,6})?)|(?:[0-9]|[1-9][0-9]|1[0-7][0-9])(?:(?:\\.[0-9]{1,6})?))$', 'Only Geo numbers are allowed.')], verbose_name='Longitude')),
                ('latitude', models.FloatField(blank=True, default=None, max_length=10, null=True, validators=[django.core.validators.RegexValidator('^(\\+|-)?(?:90(?:(?:\\.0{1,6})?)|(?:[0-9]|[1-8][0-9])(?:(?:\\.[0-9]{1,6})?))$', 'Only Geo numbers are allowed.')], verbose_name='Latitude')),
                ('address_name', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='Address name')),
                ('km_radius', models.FloatField(blank=True, default=None, null=True, verbose_name='Km radius')),
                ('qaryb_link', models.SlugField(blank=True, default=None, max_length=200, null=True, unique=True, verbose_name='Qaryb link')),
                ('unique_id', models.CharField(max_length=40, unique=True, verbose_name='Unique ID')),
                ('task_id', models.CharField(blank=True, default=None, max_length=40, null=True, verbose_name='Task ID')),
                ('created_date', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Created date')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='Updated date')),
                ('opening_days', models.ManyToManyField(blank=True, related_name='temp_shop_opening_days', to='shop.authshopdays', verbose_name='Opening days')),
            ],
            options={
                'verbose_name': 'Temp Shop',
                'verbose_name_plural': 'Temp Shops',
                'ordering': ('created_date',),
            },
        ),
        migrations.CreateModel(
            name='ModeVacance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_from', models.DateField(blank=True, null=True, verbose_name='Date from')),
                ('date_to', models.DateField(blank=True, null=True, verbose_name='Date to')),
                ('auth_shop', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='auth_shop_mode_vacance', to='shop.authshop', verbose_name='Auth shop')),
            ],
            options={
                'verbose_name': 'Mode Vacance',
                'verbose_name_plural': 'Mode Vacances',
            },
        ),
        migrations.AddField(
            model_name='authshop',
            name='opening_days',
            field=models.ManyToManyField(blank=True, related_name='authshop_opening_days', to='shop.authshopdays', verbose_name='Opening days'),
        ),
        migrations.AddField(
            model_name='authshop',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user_authshop', to=settings.AUTH_USER_MODEL, verbose_name='User'),
        ),
        migrations.CreateModel(
            name='AskForCreatorLabel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('A', 'En attente de confirmation'), ('R', 'Rejeté'), ('C', 'Confirmé')], default='A', max_length=1, verbose_name='Status')),
                ('asked_counter', models.PositiveIntegerField(default=1, verbose_name='Fois demandé')),
                ('created_date', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Date Création')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='Date mise à jour')),
                ('auth_shop', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='auth_shop_creator', to='shop.authshop', verbose_name='Boutique')),
            ],
            options={
                'verbose_name': 'Demande Créateur',
                'verbose_name_plural': 'Demandes Créateur',
            },
        ),
    ]
