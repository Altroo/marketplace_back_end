# Generated by Django 4.0.5 on 2022-06-07 09:55

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import order.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('shop', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=30, null=True, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, null=True, verbose_name='last name')),
                ('buyer_avatar_thumbnail', models.ImageField(blank=True, default=None, null=True, upload_to=order.models.get_fallback_avatar_path, verbose_name='Buyer Thumb Avatar')),
                ('shop_name', models.CharField(blank=True, max_length=150, null=True, verbose_name='Shop name')),
                ('seller_avatar_thumbnail', models.ImageField(blank=True, default=None, null=True, upload_to=order.models.get_fallback_shop_avatar_path, verbose_name='Avatar thumbnail')),
                ('note', models.CharField(blank=True, default=None, max_length=300, null=True, verbose_name='Note')),
                ('order_number', models.CharField(max_length=255, unique=True, verbose_name='Order number')),
                ('order_date', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Order date')),
                ('order_status', models.CharField(choices=[('TC', 'To confirm'), ('OG', 'On-going'), ('SH', 'Shipped'), ('RD', 'Ready'), ('TE', 'To evaluate'), ('CM', 'Completed'), ('CB', 'Canceled by buyer'), ('CS', 'Canceled by seller')], default='TC', max_length=2, verbose_name='Order Status')),
                ('highest_delivery_price', models.FloatField(blank=True, null=True, verbose_name='Highest delivery price')),
                ('viewed_buyer', models.BooleanField(default=False)),
                ('viewed_seller', models.BooleanField(default=False)),
                ('buyer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='order_buyer', to=settings.AUTH_USER_MODEL, verbose_name='Buyer')),
                ('seller', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='order_seller', to='shop.authshop', verbose_name='Seller')),
            ],
            options={
                'verbose_name': 'Order',
                'verbose_name_plural': 'Orders',
                'ordering': ('-order_date',),
            },
        ),
        migrations.CreateModel(
            name='OrderDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('offer_type', models.CharField(blank=True, choices=[('V', 'Sell'), ('S', 'Service'), ('L', 'Location')], max_length=1, null=True, verbose_name='Offer Type')),
                ('title', models.CharField(blank=True, max_length=150, null=True, verbose_name='title')),
                ('offer_thumbnail', models.ImageField(blank=True, max_length=1000, null=True, upload_to=order.models.get_fallback_shop_offers_path, verbose_name='Offer thumbnail')),
                ('picked_click_and_collect', models.BooleanField(default=False, verbose_name='Click and collect')),
                ('product_longitude', models.FloatField(default=False, max_length=10, validators=[django.core.validators.RegexValidator('^(\\+|-)?(?:180(?:(?:\\.0{1,6})?)|(?:[0-9]|[1-9][0-9]|1[0-7][0-9])(?:(?:\\.[0-9]{1,6})?))$', 'Only Geo numbers are allowed.')], verbose_name='Product longitude')),
                ('product_latitude', models.FloatField(default=False, max_length=10, validators=[django.core.validators.RegexValidator('^(\\+|-)?(?:90(?:(?:\\.0{1,6})?)|(?:[0-9]|[1-8][0-9])(?:(?:\\.[0-9]{1,6})?))$', 'Only Geo numbers are allowed.')], verbose_name='Product latitude')),
                ('product_address', models.CharField(default=False, max_length=255, verbose_name='product_address')),
                ('picked_delivery', models.BooleanField(default=False, verbose_name='Delivery')),
                ('delivery_price', models.FloatField(blank=True, null=True, verbose_name='Delivery price')),
                ('address', models.CharField(blank=True, max_length=300, null=True, verbose_name='Address')),
                ('city', models.CharField(blank=True, max_length=30, null=True, verbose_name='City')),
                ('zip_code', models.PositiveIntegerField(blank=True, null=True, verbose_name='Zip code')),
                ('country', models.CharField(blank=True, max_length=30, null=True, verbose_name='Country')),
                ('first_name', models.CharField(blank=True, max_length=30, null=True, verbose_name='First name')),
                ('last_name', models.CharField(blank=True, max_length=30, null=True, verbose_name='Last name')),
                ('phone', models.CharField(blank=True, max_length=15, null=True, verbose_name='Phone number')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='email address')),
                ('picked_color', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='Picked Color')),
                ('picked_size', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='Picked Size')),
                ('picked_quantity', models.PositiveIntegerField(default=1, verbose_name='Quantity')),
                ('picked_date', models.DateField(blank=True, default=None, null=True, verbose_name='Picked Date')),
                ('picked_hour', models.TimeField(blank=True, default=None, null=True, verbose_name='Picked Hour')),
                ('service_zone_by', models.CharField(choices=[('A', 'Address'), ('S', 'Sector')], default='A', max_length=1, verbose_name='Zone by')),
                ('service_longitude', models.FloatField(blank=True, default=None, max_length=10, null=True, validators=[django.core.validators.RegexValidator('^(\\+|-)?(?:180(?:(?:\\.0{1,6})?)|(?:[0-9]|[1-9][0-9]|1[0-7][0-9])(?:(?:\\.[0-9]{1,6})?))$', 'Only Geo numbers are allowed.')], verbose_name='Service Longitude')),
                ('service_latitude', models.FloatField(blank=True, default=None, max_length=10, null=True, validators=[django.core.validators.RegexValidator('^(\\+|-)?(?:90(?:(?:\\.0{1,6})?)|(?:[0-9]|[1-8][0-9])(?:(?:\\.[0-9]{1,6})?))$', 'Only Geo numbers are allowed.')], verbose_name='Service Latitude')),
                ('service_address', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='Service Address')),
                ('service_km_radius', models.FloatField(blank=True, default=None, null=True, verbose_name='Km radius')),
                ('total_self_price', models.FloatField(default=0.0, verbose_name='Total self price')),
                ('offer_canceled', models.CharField(blank=True, choices=[('CB', 'Canceled by buyer'), ('CS', 'Canceled by seller')], default=None, max_length=2, null=True, verbose_name='Offer Canceled')),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='order_details_order', to='order.order', verbose_name='Order')),
            ],
            options={
                'verbose_name': 'Order Details',
                'verbose_name_plural': 'Order Details',
                'ordering': ('-order__order_date',),
            },
        ),
    ]
