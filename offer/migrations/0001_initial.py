# Generated by Django 4.0.3 on 2022-03-09 08:01

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import offer.base.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth_shop', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Categories',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code_category', models.CharField(blank=True, default=None, max_length=2, null=True, unique=True)),
                ('name_category', models.CharField(max_length=255, unique=True, verbose_name='Category Name')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Colors',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code_color', models.CharField(blank=True, default=None, max_length=2, null=True, unique=True)),
                ('name_color', models.CharField(max_length=255, unique=True, verbose_name='Color Name')),
            ],
            options={
                'verbose_name': 'Color',
                'verbose_name_plural': 'Colors',
            },
        ),
        migrations.CreateModel(
            name='ForWhom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code_for_whom', models.CharField(blank=True, default=None, max_length=2, null=True, unique=True)),
                ('name_for_whom', models.CharField(max_length=255, unique=True, verbose_name='For whom Name')),
            ],
            options={
                'verbose_name': 'For Whom',
                'verbose_name_plural': 'For Whom',
            },
        ),
        migrations.CreateModel(
            name='Offers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('offer_type', models.CharField(choices=[('V', 'Sell'), ('S', 'Service'), ('L', 'Location')], max_length=1, verbose_name='Offer Type')),
                ('title', models.CharField(max_length=150, verbose_name='title')),
                ('picture_1', models.ImageField(blank=True, default=None, max_length=1000, null=True, upload_to=offer.base.models.get_shop_products_path, verbose_name='Picture 1')),
                ('picture_2', models.ImageField(blank=True, default=None, max_length=1000, null=True, upload_to=offer.base.models.get_shop_products_path, verbose_name='Picture 2')),
                ('picture_3', models.ImageField(blank=True, default=None, max_length=1000, null=True, upload_to=offer.base.models.get_shop_products_path, verbose_name='Picture 3')),
                ('picture_4', models.ImageField(blank=True, default=None, max_length=1000, null=True, upload_to=offer.base.models.get_shop_products_path, verbose_name='Picture 4')),
                ('picture_1_thumbnail', models.ImageField(blank=True, max_length=1000, null=True, upload_to=offer.base.models.get_shop_products_path, verbose_name='Picture 1 thumbnail')),
                ('picture_2_thumbnail', models.ImageField(blank=True, max_length=1000, null=True, upload_to=offer.base.models.get_shop_products_path, verbose_name='Picture 2 thumbnail')),
                ('picture_3_thumbnail', models.ImageField(blank=True, max_length=1000, null=True, upload_to=offer.base.models.get_shop_products_path, verbose_name='Picture 3 thumbnail')),
                ('picture_4_thumbnail', models.ImageField(blank=True, max_length=1000, null=True, upload_to=offer.base.models.get_shop_products_path, verbose_name='Picture 4 thumbnail')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('price', models.FloatField(default=0.0, verbose_name='Price')),
                ('created_date', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Created date')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='Updated date')),
                ('auth_shop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='auth_shop_offers', to='auth_shop.authshop', verbose_name='Auth Shop')),
                ('for_whom', models.ManyToManyField(related_name='product_for_whom', to='offer.forwhom', verbose_name='For Whom')),
                ('offer_categories', models.ManyToManyField(related_name='offer_categories', to='offer.categories', verbose_name='Offer Categories')),
            ],
            options={
                'verbose_name': 'Offer',
                'verbose_name_plural': 'Offers',
                'ordering': ('created_date',),
            },
        ),
        migrations.CreateModel(
            name='ServiceDays',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code_day', models.CharField(blank=True, default=None, max_length=2, null=True, unique=True)),
                ('name_day', models.CharField(max_length=255, unique=True, verbose_name='Day name')),
            ],
            options={
                'verbose_name': 'Day',
                'verbose_name_plural': 'Days',
            },
        ),
        migrations.CreateModel(
            name='Sizes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code_size', models.CharField(blank=True, default=None, max_length=2, null=True, unique=True)),
                ('name_size', models.CharField(max_length=255, unique=True, verbose_name='Size Name')),
            ],
            options={
                'verbose_name': 'Size',
                'verbose_name_plural': 'Sizes',
            },
        ),
        migrations.CreateModel(
            name='Solder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('solder_type', models.CharField(choices=[('F', 'Prix fix'), ('P', 'Pourcentage')], max_length=1, verbose_name='Solder type')),
                ('solder_value', models.FloatField(default=0.0, verbose_name='Solder value')),
                ('offer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='offer_solder', to='offer.offers', verbose_name='Offer')),
            ],
            options={
                'verbose_name': 'Solder',
                'verbose_name_plural': 'Solders',
            },
        ),
        migrations.CreateModel(
            name='Services',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_morning_hour_from', models.TimeField(blank=True, default=None, null=True, verbose_name='Morning hour from')),
                ('service_morning_hour_to', models.TimeField(blank=True, default=None, null=True, verbose_name='Morning hour to')),
                ('service_afternoon_hour_from', models.TimeField(blank=True, default=None, null=True, verbose_name='Afternoon hour from')),
                ('service_afternoon_hour_to', models.TimeField(blank=True, default=None, null=True, verbose_name='Afternoon hour to')),
                ('service_zone_by', models.CharField(choices=[('A', 'Address'), ('S', 'Sector')], default='A', max_length=1, verbose_name='Zone by')),
                ('service_price_by', models.CharField(choices=[('H', 'Heur'), ('J', 'Jour'), ('S', 'Semaine'), ('M', 'Mois'), ('P', 'Prestation')], max_length=1, verbose_name='Price by')),
                ('service_longitude', models.FloatField(blank=True, default=None, max_length=10, null=True, validators=[django.core.validators.RegexValidator('^(\\+|-)?(?:180(?:(?:\\.0{1,6})?)|(?:[0-9]|[1-9][0-9]|1[0-7][0-9])(?:(?:\\.[0-9]{1,6})?))$', 'Only Geo numbers are allowed.')], verbose_name='Service Longitude')),
                ('service_latitude', models.FloatField(blank=True, default=None, max_length=10, null=True, validators=[django.core.validators.RegexValidator('^(\\+|-)?(?:90(?:(?:\\.0{1,6})?)|(?:[0-9]|[1-8][0-9])(?:(?:\\.[0-9]{1,6})?))$', 'Only Geo numbers are allowed.')], verbose_name='Service Latitude')),
                ('service_address', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='Service Address')),
                ('service_km_radius', models.FloatField(blank=True, default=None, null=True, verbose_name='Km radius')),
                ('offer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='offer_services', to='offer.offers', verbose_name='Offer')),
                ('service_availability_days', models.ManyToManyField(related_name='service_availability_days', to='offer.servicedays', verbose_name='Opening days')),
            ],
            options={
                'verbose_name': 'Service',
                'verbose_name_plural': 'Services',
                'ordering': ('-pk',),
            },
        ),
        migrations.CreateModel(
            name='Products',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_quantity', models.PositiveIntegerField(default=0, verbose_name='Quantity')),
                ('product_price_by', models.CharField(choices=[('U', 'Unity'), ('K', 'Kilogram'), ('L', 'Liter')], max_length=1, verbose_name='Price by')),
                ('product_longitude', models.FloatField(blank=True, default=None, max_length=10, null=True, validators=[django.core.validators.RegexValidator('^(\\+|-)?(?:180(?:(?:\\.0{1,6})?)|(?:[0-9]|[1-9][0-9]|1[0-7][0-9])(?:(?:\\.[0-9]{1,6})?))$', 'Only Geo numbers are allowed.')], verbose_name='Product Longitude')),
                ('product_latitude', models.FloatField(blank=True, default=None, max_length=10, null=True, validators=[django.core.validators.RegexValidator('^(\\+|-)?(?:90(?:(?:\\.0{1,6})?)|(?:[0-9]|[1-8][0-9])(?:(?:\\.[0-9]{1,6})?))$', 'Only Geo numbers are allowed.')], verbose_name='Product Latitude')),
                ('product_address', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='Product Address')),
                ('offer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='offer_products', to='offer.offers', verbose_name='Offer')),
                ('product_colors', models.ManyToManyField(related_name='product_colors', to='offer.colors', verbose_name='Product Colors')),
                ('product_sizes', models.ManyToManyField(related_name='product_sizes', to='offer.sizes', verbose_name='Product Sizes')),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
                'ordering': ('-pk',),
            },
        ),
        migrations.CreateModel(
            name='Delivery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('delivery_city_1', models.CharField(blank=True, default=None, max_length=300, null=True, verbose_name='Delivery City 1')),
                ('delivery_price_1', models.FloatField(default=0.0, verbose_name='Delivery Price 1')),
                ('delivery_days_1', models.PositiveIntegerField(default=0, verbose_name='Number of Days 1')),
                ('delivery_city_2', models.CharField(blank=True, default=None, max_length=300, null=True, verbose_name='Delivery City 2')),
                ('delivery_price_2', models.FloatField(default=0.0, verbose_name='Delivery Price 2')),
                ('delivery_days_2', models.PositiveIntegerField(default=0, verbose_name='Number of Days 2')),
                ('delivery_city_3', models.CharField(blank=True, default=None, max_length=300, null=True, verbose_name='Delivery City 3')),
                ('delivery_price_3', models.FloatField(default=0.0, verbose_name='Delivery Price 3')),
                ('delivery_days_3', models.PositiveIntegerField(default=0, verbose_name='Number of Days 3')),
                ('offer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='offer_delivery', to='offer.offers', verbose_name='Offer')),
            ],
            options={
                'verbose_name': 'Delivery',
                'verbose_name_plural': 'Deliveries',
            },
        ),
    ]
