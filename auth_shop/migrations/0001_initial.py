# Generated by Django 4.0.2 on 2022-02-22 09:48

import auth_shop.models
import colorfield.fields
import django.core.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Categories',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code_category', models.CharField(blank=True, default=None, max_length=2, null=True, unique=True)),
                ('name_category', models.CharField(max_length=255, unique=True, verbose_name='Category Name')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Colors',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code_color', models.CharField(blank=True, default=None, max_length=2, null=True, unique=True)),
                ('name_color', models.CharField(max_length=255, unique=True, verbose_name='Color Name')),
            ],
            options={
                'verbose_name': 'Color',
                'verbose_name_plural': 'Colors',
            },
        ),
        migrations.CreateModel(
            name='Days',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code_day', models.CharField(blank=True, default=None, max_length=2, null=True, unique=True)),
                ('name_day', models.CharField(max_length=255, unique=True, verbose_name='Day name')),
            ],
            options={
                'verbose_name': 'Day',
                'verbose_name_plural': 'Days',
            },
        ),
        migrations.CreateModel(
            name='ForWhom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code_for_whom', models.CharField(blank=True, default=None, max_length=2, null=True, unique=True)),
                ('name_for_whom', models.CharField(max_length=255, unique=True, verbose_name='For whom Name')),
            ],
            options={
                'verbose_name': 'For Whom',
                'verbose_name_plural': 'For Whom',
            },
        ),
        migrations.CreateModel(
            name='Sizes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code_size', models.CharField(blank=True, default=None, max_length=2, null=True, unique=True)),
                ('name_size', models.CharField(max_length=255, unique=True, verbose_name='Size Name')),
            ],
            options={
                'verbose_name': 'Size',
                'verbose_name_plural': 'Sizes',
            },
        ),
        migrations.CreateModel(
            name='AuthShop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('shop_name', models.CharField(max_length=150, verbose_name='Shop name')),
                ('avatar', models.ImageField(blank=True, default=None, max_length=1000, null=True, upload_to=auth_shop.models.get_avatar_path, verbose_name='Avatar')),
                ('color_code', colorfield.fields.ColorField(default='#FFFFFF', image_field=None, max_length=18, samples=None, verbose_name='Color code')),
                ('font_name', models.CharField(choices=[('LI', 'Light'), ('BO', 'Boldy'), ('CL', 'Classic'), ('MA', 'Magazine'), ('PO', 'Pop'), ('SA', 'Sans'), ('PA', 'Pacifico'), ('FI', 'Fira')], default='L', max_length=2, verbose_name='Font name')),
                ('bio', models.TextField(blank=True, null=True, verbose_name='Bio')),
                ('opening_days', models.CharField(default='0,0,0,0,0,0,0', max_length=13, verbose_name='Opening days')),
                ('morning_hour_from', models.TimeField(blank=True, default=None, null=True, verbose_name='Morning hour from')),
                ('morning_hour_to', models.TimeField(blank=True, default=None, null=True, verbose_name='Morning hour to')),
                ('afternoon_hour_from', models.TimeField(blank=True, default=None, null=True, verbose_name='Afternoon hour from')),
                ('afternoon_hour_to', models.TimeField(blank=True, default=None, null=True, verbose_name='Afternoon hour to')),
                ('phone', models.CharField(blank=True, default=None, max_length=15, null=True, verbose_name='Phone number')),
                ('contact_email', models.EmailField(blank=True, default=None, max_length=254, null=True, verbose_name='Contact Email')),
                ('website_link', models.URLField(blank=True, default=None, null=True, verbose_name='Website')),
                ('facebook_link', models.URLField(blank=True, default=None, null=True, verbose_name='Facebook')),
                ('twitter_link', models.URLField(blank=True, default=None, null=True, verbose_name='Twitter')),
                ('instagram_link', models.URLField(blank=True, default=None, null=True, verbose_name='Instagram')),
                ('whatsapp', models.CharField(blank=True, default=None, max_length=15, null=True, verbose_name='Whatsapp number')),
                ('zone_by', models.CharField(choices=[('A', 'Address'), ('S', 'Sector')], default='A', max_length=1, verbose_name='Zone by')),
                ('longitude', models.FloatField(blank=True, default=None, max_length=10, null=True, validators=[django.core.validators.RegexValidator('^(\\+|-)?(?:180(?:(?:\\.0{1,6})?)|(?:[0-9]|[1-9][0-9]|1[0-7][0-9])(?:(?:\\.[0-9]{1,6})?))$', 'Only Geo numbers are allowed.')], verbose_name='Longitude')),
                ('latitude', models.FloatField(blank=True, default=None, max_length=10, null=True, validators=[django.core.validators.RegexValidator('^(\\+|-)?(?:90(?:(?:\\.0{1,6})?)|(?:[0-9]|[1-8][0-9])(?:(?:\\.[0-9]{1,6})?))$', 'Only Geo numbers are allowed.')], verbose_name='Latitude')),
                ('address_name', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='Address name')),
                ('km_radius', models.FloatField(blank=True, default=None, null=True, verbose_name='Km radius')),
                ('qaryb_link', models.URLField(unique=True, verbose_name='Qaryb link')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=False, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Auth Shop',
                'verbose_name_plural': 'Auth Shops',
                'ordering': ('created_date',),
            },
        ),
    ]
